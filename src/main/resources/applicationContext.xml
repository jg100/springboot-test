<?xml version="1.0" encoding="UTF-8"?>
<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="
      http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-3.2.xsd" >


    <!--
    Scopes: Singleton (one obj), prototype (new obj for every call)

    Setup and teardown of bean parameters
    initmethod = (...) -> specific method to be called on the bean upon instantiation
    destroy-method = (...) -> method called on the bean when removed from the container

    If you are using Spring's IoC container in a non-web application environment; for example, in a rich client desktop
    environment, you register a shutdown hook with the JVM. Doing so ensures a graceful shutdown and calls the relevant
    destroy methods on your singleton beans so that all resources are released.

    It is recommended that you do not use the InitializingBean or DisposableBean callbacks,
    because XML configuration gives much flexibility in terms of naming your method.

    -->

    <bean id="userbean" class="com.example.movierec.User" scope="singleton" init-method="init" destroy-method="destroy"
      parent="person">
    <property name="name" value="Joel G"></property>
    </bean>


    <bean id="person" class="com.example.movierec.Person">
        <property name="name" value="Not Joel"></property>
    </bean>

    <!-- Bean Defintion Template(s)
     Templates that can be used by other child bean ddefintions
     Specify the class and abstract param

     Cannot be instantiated on it's own, similar to an interface
     -->
    <bean id="beanTemplate" abstract="true">
        <property name="name" value="Template Joel"></property>
    </bean>


    <!-- Def. for text editor bean using inner bean -->
    <bean id="textEditor" class="com.example.movierec.textedit.TextEditor">
        <property name="spellChecker">
            <bean id="spellChecker" class="com.example.movierec.textedit.SpellChecker"></bean>
        </property>
    </bean>


</beans>